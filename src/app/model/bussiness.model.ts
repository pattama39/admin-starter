export interface ObjMorganization {
    organizationCode: string;
    organizationOfficialCode: string;
    organizationName: string;
    organizationName2: string;
    createByOrgCode: string;
    modByOrgCode: string;
    parentOrgCode: string;
    joinPassword: string;
    contact: string;
    organizationId: string;
    organizationTaxId: string;
    isTransferItemByPronly: number;
    depreciationMethodId: number;
    beginPeriodDate: Date;
    startSystemDate: Date;
    revenueTaxTypeId: number;
    taxRate: number;
    taxMinBase: number;
    vatRate: number;
    inventoryCostType: number;
    inventoryPostTypeId: number;
    isSystem: number;
    inActive: number;
    taxCardNo: string;
    commercialNo: string;
    organizationTypeId: number;
    currentcyCode: string;
    defaultLanguage: string;
    businessName: string;
    businessName2: string;
    organizationTaxCode: string;
    socialInsuranceCode: string;
    accountCode: string;
    providentFundCode: string;
    workHoursSalary: number;
    workHoursDay: number;
    currentYear: number;
    lateCode: string;
    leaveCode: string;
    taxDocNo: string;
    revenueTax: string;
    taxCal: number;
    disc: string;
    createByCode: string;
    modDate: Date;
    modByCode: string;
    remark: string;
    createDate: Date;
    currentAddress1: string;
    currentAddress2: string;
    currentRoad: string;
    currentRoad2: string;
    currentTumbonName: string;
    currentTumbonName2: string;
    currentAmphurName: string;
    currentAmphurName2: string;
    currentProvinceName: string;
    currentProvinceName2: string;
    currentPostCode: string;
    currentPostCode2: string;
    currentTelephone: string;
    currentTelephone2: string;
    currentFax: string;
    currentFax2: string;
    currentEmail: string;
    currentWebSite: string;
    languageType: string;
    vatTypeId: number;
    expireDate: Date;
    maximumStaff: number;
    exchangeUserName: string;
    exchangeUserPassword: string;
    registerCredit: number;
    registerCount: number;
    lastRegisterDate: Date;
    isUseSecurity: number;
    isSyncToServer: number;
    lastSyncDateTime: Date;
    notSyncDataAmount: number;
    showAbsoluteDateReport: number;
    isAutoLiveUpdate: number;
    licenseNoForAnimalNursing: string;
    licenseNoForAnimalHospital: string;
    deleteAppointment: number;
    hospitalName: string;
    businessAddress1: string;
    businessAddress2: string;
    businessRoad: string;
    businessRoad2: string;
    businessTumbonName: string;
    businessTumbonName2: string;
    businessAmphurName: string;
    businessAmphurName2: string;
    businessProvinceName: string;
    businessProvinceName2: string;
    businessPostCode: string;
    businessPostCode2: string;
    businessTelephone: string;
    businessTelephone2: string;
    businessFax: string;
    businessFax2: string;
    businessEmail: string;
    businessWebSite: string;
}

export interface ObjMclinicOptions {
    createByOrgCode: string;
    organizationCode: string;
    doctorName: string;
    fdano: string;
    updateQueTime: number;
    vfdcomPort: string;
    shelfComPort: string;
    barcodeComport: string;
    welcomeMessage: string;
    receiveMessage: string;
    thanksMessage: string;
    imagingPath: string;
    imagingSourceTypeId: number;
    imageDirectory: string;
    isCheckOpenAccount: number;
    printerForReceipt: string;
    printAmountForReceipt: number;
    printerForPatientCard: string;
    printerForLabel: string;
    printerForLabel2: string;
    printerForCertificate: string;
    printerForOpdcard: string;
    printerForOrderDrug: string;
    printerForAppointment: string;
    printerForReport: string;
    printerForLabLabel: string;
    digitalPenPath: string;
    isCalStockFromBeginning: number;
    currentDate: Date;
    currentBuild: number;
    lastMonthEndDate: Date;
    stockMinDays: number;
    stockMaxDays: number;
    stockCalDays: number;
    isAllowOrder2SubCoursesPerDay: number;
    isOrderItemByName: number;
    currentBeginMonth: Date;
    currentBeginYear: Date;
    createDate: Date;
    modDate: Date;
    modByOrgCode: string;
    parentOrgCode: string;
    modByCode: string;
    createByCode: string;
    costTypeId: number;
    isCalCostWithoutVat: number;
    backupTypeId: number;
    isAllowEnterHn: number;
    openTime: Date;
    closeTime: Date;
    appMinutesInterval: number;
    isMustPrintReceiptBeforeConfirm: number;
    isConfirmAfterPrintReceipt: number;
    isShowDoseByItem: number;
    isShowCourseWhenSearchPatient: number;
    isOpenShelfWhenReceive: number;
    receiptFormat: string;
    maxSubCourseNo: number;
    inventoryOrderItemFormId: number;
    salesOrderItemFormId: number;
    isExportDataToIdcwhenReceiveMoney: number;
    isImportDataFromIdcwhenSearchPatient: number;
    isHidePatientDataForOtherOrg: number;
    isShowEndDaySummary: number;
    isAllowEnterPackingQuantity: number;
    isAllowCancelQue: number;
    isAllowManageCourse: number;
    isAllowRemed: number;
    isAllowEditSalesItem: number;
    isAllowDeleteSalesItem: number;
    payDebtTypeId: number;
    isAllowCancelFingerprint: number;
    isSyncToServer: number;
    isUsePasswordToDiscount: number;
    isPayIncentiveWhenCourseComplete: number;
    isCheckItemBeforeConfirm: number;
    salesNetAmountRoundUpCode: string;
    backupDataPath: string;
    isForceImportPatientData: number;
    isImportCourseWhenSearch: number;
    isImportSaleswhenSearch: number;
    isImportLabWhenSearch: number;
    isImportXrayWhenSearch: number;
    isImportIcdwhenSearch: number;
    isImportArwhenSearch: number;
    isAutoOrderSubCourse: number;
    isShowMarkOnNewOrderItem: number;
    receiptHeaderCode: string;
    cashBudgetAmount: number;
    isMustReceiveMoneyBeforeConfirmQue: number;
    maxDayReturnItem: number;
    printerForMemberCard: string;
    isMultiCardHolder: number;
    isShowDebt: number;
    typeHolderMemberCard: string;
    typeUseMemberCard: string;
    accessKey: string;
    isReturnItemAllType: number;
    vendorCodeForTransfer: string;
    isHidePriceWhenTransfer: number;
    reportThpath: string;
    reportEnpath: string;
    logPath: string;
    isReplacePurchasePrice: number;
    labInstrumentTypeId: number;
    labOptions1: string;
    labOptions2: string;
    labOptions3: string;
    labOptions4: string;
    labOptions5: string;
    labOptions6: string;
    labOptions7: string;
    labOptions8: string;
    labOptions9: string;
    labOptions10: string;
    orderCourseTypeId: number;
    exchangePath: string;
    xrayInstrumentTypeId: number;
    xrayOptions1: string;
    xrayOptions2: string;
    xrayOptions3: string;
    xrayOptions4: string;
    xrayOptions5: string;
    xrayOptions6: string;
    xrayOptions7: string;
    xrayOptions8: string;
    xrayOptions9: string;
    xrayOptions10: string;
    isUseOnlineDataSystem: number;
    printerForLabelPath: string;
    printerForLabel2Path: string;
    isUsePharmaRoomSystem: number;
    helpPath: string;
    expireDateForLabelTypeId: number;
    cameraSystemTypeId: number;
    isCanDebtAmount: number;
    collectAmountPerPoint: number;
    collectPoint: number;
    redeemAmountPerPoint: number;
    redeemPoint: number;
    pointExpireDay: number;
    pointCalculateTypeId: number;
    isUsePoint: number;
    minimumReserveAmount: number;
    expireDayReserveAmount: number;
    isMemberCanRedeemPoint: number;
    memberReportThpath: string;
    memberReportEnpath: string;
    isAlertRight: number;
    printerForInvoice: string;
    printAmountForInvoice: number;
    isCalVatFromSalesPrice: number;
    userNameSms: string;
    passwordSms: string;
    isAutoConnectSms: number;
    printerForSticker: string;
    printAmountForSticker: number;
    licenseForNarcoticsType2: string;
    licenseForPsychotropicType2: string;
    licenseForPsychotropicType3: string;
    licenseForPsychotropicType4: string;
    caseComplaintComPort: string;
    isSpecifyXrayImplement: number;
    isCalReserveVat: number;
    imageVideoPath: string;
    smsSenderName: string;
    isMonday: number;
    monTimeIn: Date;
    monTimeOut: Date;
    isTuesday: number;
    tueTimeIn: Date;
    tueTimeOut: Date;
    isWednesday: number;
    wedTimeIn: Date;
    wedTimeOut: Date;
    isThursday: number;
    thuTimeIn: Date;
    thuTimeOut: Date;
    isFriday: number;
    friTimeIn: Date;
    friTimeOut: Date;
    isSaturday: number;
    satTimeIn: Date;
    satTimeOut: Date;
    isSunday: number;
    sunTimeIn: Date;
    sunTimeOut: Date;
    chargeLateCheckOut: number;
    dayCareCheckInTime: Date;
    dayCareCheckOutTime: Date;
    dayNightCheckInTime: Date;
    dayNightCheckOutTime: Date;
    coCourseCustomer: number;
    medchatAccSid: string;
    medchatAccAuth: string;
    medchatApiSid: string;
    medchatApiSecret: string;
    lineOachatUrl: string;
    clinicCalendarUrl?: any;
}

export interface BussinessModel {
    organizationCode?: any;
    organizationName?: any;
    smsCreditBalance: number;
    objMorganization: ObjMorganization;
    objMorganizationLogo?: any;
    objMclinicOptions: ObjMclinicOptions;
    lstObjMclinicOptions?: any;
    lstMclinicCalendar?: any;
    lstMclinicCalendarHoliday?: any;
    ischangeStaffTime?: any;
    objMwarehouse?: any;
    objStockCard?: any;
    objMitem?: any;
    count: number;
    objPosOp?: any;
    smsBalance?: any;
}
